// <auto-generated />
using GScores.Infrastructure.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GScores.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250710112533_Initial_CreateTables")]
    partial class Initial_CreateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GScores.Core.Domains.ForeignLanguageCode", b =>
                {
                    b.Property<string>("ForeignCode")
                        .HasColumnType("varchar(3)");

                    b.HasKey("ForeignCode");

                    b.ToTable("ForeignLanguageCodes");
                });

            modelBuilder.Entity("GScores.Core.Domains.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("BiologyScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal?>("ChemistryScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal?>("CivicEducationScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("ForeignLanguageCodeForeignCode")
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("ForeignScore")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<decimal?>("GeographyScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal?>("HistoryScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<bool>("IsNaturalScience")
                        .HasColumnType("bit");

                    b.Property<decimal?>("LiteratureScore")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<decimal?>("MathScore")
                        .HasColumnType("decimal(3, 1)");

                    b.Property<decimal?>("PhysicsScore")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("StudentId");

                    b.HasIndex("ForeignLanguageCodeForeignCode");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("GScores.Core.Domains.Student", b =>
                {
                    b.HasOne("GScores.Core.Domains.ForeignLanguageCode", "ForeignLanguageCode")
                        .WithMany("Students")
                        .HasForeignKey("ForeignLanguageCodeForeignCode");

                    b.Navigation("ForeignLanguageCode");
                });

            modelBuilder.Entity("GScores.Core.Domains.ForeignLanguageCode", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
